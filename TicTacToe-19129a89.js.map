{"version":3,"file":"TicTacToe-19129a89.js","sources":["../node_modules/@storeon/solidjs/index.js","../node_modules/core-js/internals/array-fill.js","../node_modules/core-js/internals/add-to-unscopables.js","../node_modules/klona/dist/index.mjs","../node_modules/core-js/modules/es.array.fill.js","../node_modules/core-js/modules/es.array.is-array.js","../projects/tictactoe/store/board.js","../projects/tictactoe/store/store.js","../node_modules/storeon/index.js","../node_modules/core-js/modules/es.array.join.js","../projects/tictactoe/components/Header/Header.jsx","../projects/tictactoe/components/Board/Board.jsx","../projects/tictactoe/components/TicTacToe/TicTacToe.jsx"],"sourcesContent":["import {\n  reconcile,\n  createState,\n  createContext,\n  useContext,\n  onCleanup\n} from 'solid-js'\nimport { createComponent } from 'solid-js/dom'\n\nconst StoreContext = createContext()\n\nfunction StoreonProvider (props) {\n  if (process.env.NODE_ENV !== 'production' && !props.store) {\n    throw new Error(\n      'Could not find store in props. ' +\n        'Please ensure that you pass store to the provider ' +\n        '<StoreonProvider store={store}>'\n    )\n  }\n\n  let [state, setState] = createState(props.store.get())\n\n  let undind = props.store.on('@changed', (_, changed) => {\n    Object.keys(changed).forEach(key => {\n      setState(key, reconcile(changed[key]))\n    })\n  })\n  onCleanup(() => undind())\n\n  return createComponent(StoreContext.Provider, {\n    value: [state, props.store.dispatch],\n    children: () => props.children\n  })\n}\n\nfunction useStoreon () {\n  let store = useContext(StoreContext)\n\n  if (process.env.NODE_ENV !== 'production' && !store) {\n    throw new Error(\n      'Could not find storeon context value. ' +\n        'Please ensure the component is wrapped in a <StoreonProvider>'\n    )\n  }\n\n  return store\n}\n\nexport { StoreonProvider, useStoreon }\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","export function klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar k, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\tif (x.constructor !== Object && typeof x.constructor === 'function') {\n\t\t\ttmp = new x.constructor();\n\t\t\tfor (k in x) {\n\t\t\t\tif (tmp.hasOwnProperty(k) && tmp[k] !== x[k]) {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = {}; // null\n\t\t\tfor (k in x) {\n\t\t\t\tif (k === '__proto__') {\n\t\t\t\t\tObject.defineProperty(tmp, k, {\n\t\t\t\t\t\tvalue: klona(x[k]),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Array]') {\n\t\tk = x.length;\n\t\tfor (tmp=Array(k); k--;) {\n\t\t\ttmp[k] = klona(x[k]);\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Date]') {\n\t\treturn new Date(+x);\n\t}\n\n\tif (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t\ttmp.lastIndex = x.lastIndex;\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object DataView]') {\n\t\treturn new x.constructor( klona(x.buffer) );\n\t}\n\n\tif (str === '[object ArrayBuffer]') {\n\t\treturn x.slice(0);\n\t}\n\n\t// ArrayBuffer.isView(x)\n\t// ~> `new` bcuz `Buffer.slice` => ref\n\tif (str.slice(-6) === 'Array]') {\n\t\treturn new x.constructor(x);\n\t}\n\n\treturn x;\n}\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","var $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\n// `Array.isArray` method\n// https://tc39.es/ecma262/#sec-array.isarray\n$({ target: 'Array', stat: true }, {\n  isArray: isArray\n});\n","import { klona } from \"klona\";\n\n// actions\nexport const BOARD_A_CLICK_SQUARE = \"store/board/click_square\";\nexport const BOARD_A_RESET = \"store/board/reset\";\n\n// values\nexport const BOARD_V_DRAW = \"DRAW\";\n\nconst checkForWin = (rows, player) => {\n  const isWinningCase = (winCase) => {\n    let playerSquares = 0;\n    for(const pos of winCase) {\n      const row = Math.floor(pos / winCase.length),\n            column = pos % winCase.length;\n\n      if(rows[row][column].player === player) {\n        playerSquares++\n      }\n    }\n\n    return playerSquares === winCase.length;\n  },\n\n  winCases = [\n    [0, 1, 2],// top row\n    [3, 4, 5],// middle row\n    [6, 7, 8],// bottom row\n    [0, 4, 8],// diagonal right\n    [2, 4, 6],// diagonal left\n    [0, 3, 6],// left column\n    [1, 4, 7],// middle column\n    [2, 5, 8]// right column\n  ];\n\n  let winCaseFound = null;\n  for(const winCase of winCases) {\n    if(winCaseFound !== null) {\n      return;\n    }\n\n    if(isWinningCase(winCase)) {\n      winCaseFound = [];\n      for(const pos of winCase) {\n        winCaseFound.push({\n          row: Math.floor(pos / winCase.length),\n          column: pos % winCase.length\n        });\n      }\n\n      return [...winCaseFound];\n    }\n  }\n\n  if(winCaseFound === null) {\n    let takenSquares = 0,\n        maxSquares = Math.pow(winCases[0].length, 2);\n\n    for(const row of rows) {\n      for(const square of row) {\n        if(square.player !== \"\") {\n          takenSquares++\n        }\n      }\n    }\n\n    return takenSquares === maxSquares ? BOARD_V_DRAW : null;\n  }\n\n  return winCaseFound;\n},\n\nchooseRandomPlayer = () => (Math.round(Math.random()) === 0) ? \"O\" : \"X\",\n\ndefaultState = {\n  board: {\n    winner: \"\",\n    currentPlayer: chooseRandomPlayer(),\n    rows: [\n      Array(3).fill({ player:\"\", isWinner: 0 }),\n      Array(3).fill({ player:\"\", isWinner: 0 }),\n      Array(3).fill({ player:\"\", isWinner: 0 })\n    ]\n  }\n};\n\nexport const board = (store) => {\n  store.on(\"@init\", () => klona(defaultState));\n\n  store.on(BOARD_A_CLICK_SQUARE, (state, [yIndex, xIndex]) => {\n    let board = klona(state.board),\n        square = board.rows[yIndex][xIndex];\n\n    if(board.winner === \"\" && square.player === \"\") {\n      board.rows[yIndex][xIndex] = { ...square, player: board.currentPlayer };\n\n      let winCaseFound = checkForWin(board.rows, board.currentPlayer);\n      if(winCaseFound === BOARD_V_DRAW) {\n        board.winner = BOARD_V_DRAW;\n      } else if (Array.isArray(winCaseFound)) {\n        board.winner = board.currentPlayer;\n\n\n\n        for(let i = 0; i < winCaseFound.length; i++ ) {\n          const {row, column} = winCaseFound[i];\n          board.rows[row][column].isWinner = 1;\n        }\n      }\n\n      board.currentPlayer = board.currentPlayer === \"X\" ? \"O\" : \"X\";\n    }\n\n    return { board };\n  });\n\n  store.on(BOARD_A_RESET, () => ({\n    board: {\n      ...klona(defaultState.board),\n      currentPlayer: chooseRandomPlayer()\n    }\n  }));\n};\n","import { createStoreon } from \"storeon\";\nimport { storeonDevtools } from \"storeon/devtools\";\nimport { board } from \"./board\";\n\nexport const store = createStoreon([\n  board,\n  process.env.NODE_ENV !== \"production\" && storeonDevtools,\n]);\n","let createStoreon = modules => {\n  let events = {}\n  let state = {}\n\n  let store = {\n    dispatch (event, data) {\n      if (event !== '@dispatch') {\n        store.dispatch('@dispatch', [event, data, events[event]])\n      }\n\n      if (events[event]) {\n        let changes\n        events[event].forEach(i => {\n          let diff = events[event].includes(i) && i(state, data, store)\n          if (diff && typeof diff.then !== 'function') {\n            state = { ...state, ...diff }\n            changes = { ...changes, ...diff }\n          }\n        })\n        if (changes) store.dispatch('@changed', changes)\n      }\n    },\n\n    get: () => state,\n\n    on (event, cb) {\n      ;(events[event] || (events[event] = [])).push(cb)\n\n      return () => {\n        events[event] = events[event].filter(i => i !== cb)\n      }\n    }\n  }\n\n  modules.forEach(i => {\n    if (i) i(store)\n  })\n  store.dispatch('@init')\n\n  return store\n}\n\nexport { createStoreon }\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","import { createMemo } from \"solid-js\";\nimport { useStoreon } from \"@storeon/solidjs\";\nimport { BOARD_V_DRAW, BOARD_A_RESET } from \"../../store/board\";\nimport \"./Header.css\";\n\nexport const Header = () => {\n  const [state, dispatch] = useStoreon(),\n    playerText = createMemo(() => {\n      if (state.board.winner === \"\") {\n        return `${state.board.currentPlayer}'s move`;\n      }\n\n      if (state.board.winner === BOARD_V_DRAW) {\n        return \"Draw!\";\n      }\n\n      return `${state.board.winner} is the Winner!`;\n    }),\n    headerClasses = createMemo(() => [\n      \"header\",\n      state.board.winner.length ? \"winner-found\" : \"\",\n    ]),\n    resetBoard = () => dispatch(BOARD_A_RESET);\n\n  return (\n    <div class={headerClasses().join(\" \")}>\n      <div class=\"player-text\">\n        {playerText()}\n      </div>\n      <div class=\"replay-button\">\n        <button type=\"button\" onClick={resetBoard}>Play Again!</button>\n      </div>\n    </div>\n  );\n}\n","import { createMemo, splitProps } from \"solid-js\";\nimport { useStoreon } from \"@storeon/solidjs\";\nimport { BOARD_A_CLICK_SQUARE } from \"../../store/board\";\nimport './Board.css';\n\nexport const Board = () => {\n  const [state, _] = useStoreon(),\n  classes = createMemo(() => [\n    \"board\",\n    state.board.winner === \"\" ? \"\" : \"winner-found\"\n  ], state.board.winner);\n\n  return (\n    <div class={classes().join(\" \")}>\n      <For each={state.board.rows}>{(row, yIndex) =>\n        <Row row={row} yIndex={yIndex} />\n      }</For>\n    </div>\n  );\n}\n\nconst Row = (props) => {\n  return (\n    <div class=\"row\">\n      <For each={props.row}>{(square, xIndex) =>\n        <Square square={square} yIndex={props.yIndex} xIndex={xIndex} />\n      }</For>\n    </div>\n  )\n}\n\nconst Square = (props) => {\n  const [_, dispatch] = useStoreon(),\n    {yIndex, xIndex} = splitProps(props, [\"yIndex\", \"xIndex\"]).shift(),\n    clickSquare = () => dispatch(BOARD_A_CLICK_SQUARE, [yIndex(), xIndex()]),\n    classes = createMemo(() => [\n      \"square\",\n      props.square.isWinner ? \"winner\" : \"\",\n    ], props.square.isWinner);\n\n  return (\n    <div class={classes().join(\" \")} onClick={clickSquare}>\n      <span class=\"player\">\n        {props.square.player}\n      </span>\n    </div>\n  );\n}\n","import { StoreonProvider } from \"@storeon/solidjs\";\nimport { store } from \"../../store/store\";\nimport { Header } from \"../Header/Header\";\nimport { Board } from \"../Board/Board\";\nimport \"./TicTacToe.css\";\n\nexport const TicTacToe = () => {\n  return (\n    <StoreonProvider store={store}>\n      <div class=\"tic-tac-toe\">\n        <Header />\n        <Board />\n      </div>\n    </StoreonProvider>\n  );\n}\n\nexport default TicTacToe;\n"],"names":["StoreContext","createContext","StoreonProvider","props","state","setState","createState","store","get","undind","on","_","changed","Object","keys","forEach","key","reconcile","onCleanup","createComponent","Provider","value","dispatch","children","useStoreon","useContext","UNSCOPABLES","wellKnownSymbol","ArrayPrototype","Array","prototype","undefined","definePropertyModule","f","configurable","create","klona","x","k","tmp","str","toString","call","constructor","hasOwnProperty","defineProperty","enumerable","writable","length","Set","val","add","Map","set","Date","RegExp","source","flags","lastIndex","buffer","slice","$","target","proto","fill","O","toObject","this","toLength","argumentsLength","arguments","index","toAbsoluteIndex","end","endPos","stat","isArray","chooseRandomPlayer","Math","round","random","defaultState","board","winner","currentPlayer","rows","player","isWinner","modules","events","[object Object]","event","data","changes","i","diff","includes","then","cb","push","filter","createStoreon","yIndex","xIndex","square","winCaseFound","isWinningCase","winCase","playerSquares","pos","row","floor","column","winCases","takenSquares","maxSquares","pow","checkForWin","process","nativeJoin","join","ES3_STRINGS","IndexedObject","STRICT_METHOD","arrayMethodIsStrict","forced","separator","toIndexedObject","Header","playerText","createMemo","headerClasses","resetBoard","Board","classes","Row","Square","splitProps","shift","clickSquare","TicTacToe"],"mappings":"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"}